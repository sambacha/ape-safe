---
swagger: "2.0"
info:
  description: "API to store safe multisig transactions"
  version: "v1"
  title: "Gnosis Safe Transaction Service API"
  contact:
    email: "safe@gnosis.io"
  license:
    name: "MIT License"
host: "safe-transaction.mainnet.gnosis.io"
basePath: "/api/v1"
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
security:
- Basic: []
paths:
  /about/:
    get:
      tags:
      - "about"
      description: "Returns information and configuration of the service"
      operationId: "about_list"
      parameters: []
      responses:
        "200":
          description: ""
      x-swagger-router-controller: "swagger_server.controllers.about_controller"
  /about/master-copies/:
    get:
      tags:
      - "about"
      description: ""
      operationId: "about_master_copies_list"
      parameters: []
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MasterCopyResponse"
      x-swagger-router-controller: "swagger_server.controllers.about_controller"
  /analytics/multisig-transactions/by-origin/:
    get:
      tags:
      - "analytics"
      description: ""
      operationId: "analytics_multisig_transactions_by_origin_list"
      parameters:
      - name: "safe"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "to"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "value__lt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "value__gt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "value__lte"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "value__gte"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "value"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "operation"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "failed"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "safe_tx_gas__lt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "safe_tx_gas__gt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "safe_tx_gas__lte"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "safe_tx_gas__gte"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "safe_tx_gas"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "base_gas__lt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "base_gas__gt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "base_gas__lte"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "base_gas__gte"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "base_gas"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "gas_price__lt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "gas_price__gt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "gas_price__lte"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "gas_price__gte"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "gas_price"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "gas_token"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "refund_receiver"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "trusted"
        in: "query"
        description: ""
        required: false
        type: "string"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AnalyticsMultisigTxsByOriginResponse"
      x-swagger-router-controller: "swagger_server.controllers.analytics_controller"
  /analytics/multisig-transactions/by-safe/:
    get:
      tags:
      - "analytics"
      description: ""
      operationId: "analytics_multisig_transactions_by_safe_list"
      parameters:
      - name: "master_copy"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "Number of results to return per page."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "The initial index from which to return the results."
        required: false
        type: "integer"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200"
      x-swagger-router-controller: "swagger_server.controllers.analytics_controller"
  /contracts/:
    get:
      tags:
      - "contracts"
      description: ""
      operationId: "contracts_list"
      parameters:
      - name: "ordering"
        in: "query"
        description: "Which field to use when ordering the results."
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "Number of results to return per page."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "The initial index from which to return the results."
        required: false
        type: "integer"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_1"
      x-swagger-router-controller: "swagger_server.controllers.contracts_controller"
  /contracts/{address}/:
    get:
      tags:
      - "contracts"
      description: ""
      operationId: "contracts_read"
      parameters:
      - name: "address"
        in: "path"
        description: "A unique value identifying this contract."
        required: true
        type: "string"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/Contract"
      x-swagger-router-controller: "swagger_server.controllers.contracts_controller"
  /multisig-transactions/{safe_tx_hash}/:
    get:
      tags:
      - "multisig-transactions"
      description: ""
      operationId: "multisig_transactions_read"
      parameters:
      - name: "safe_tx_hash"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/SafeMultisigTransactionResponse"
      x-swagger-router-controller: "swagger_server.controllers.multisig_transactions_controller"
  /multisig-transactions/{safe_tx_hash}/confirmations/:
    get:
      tags:
      - "multisig-transactions"
      description: "Get the list of confirmations for a multisig transaction"
      operationId: "multisig_transactions_confirmations_list"
      parameters:
      - name: "safe_tx_hash"
        in: "path"
        required: true
        type: "string"
      - name: "limit"
        in: "query"
        description: "Number of results to return per page."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "The initial index from which to return the results."
        required: false
        type: "integer"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_2"
        "400":
          description: "Invalid data"
      x-swagger-router-controller: "swagger_server.controllers.multisig_transactions_controller"
    post:
      tags:
      - "multisig-transactions"
      description: "Add a confirmation for a transaction. More than one signature\
        \ can be used. This endpoint does not support\nthe use of delegates to make\
        \ a transaction trusted."
      operationId: "multisig_transactions_confirmations_create"
      parameters:
      - name: "safe_tx_hash"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/SafeMultisigConfirmation"
      responses:
        "201":
          description: "Created"
        "400":
          description: "Malformed data"
        "422":
          description: "Error processing data"
      x-swagger-router-controller: "swagger_server.controllers.multisig_transactions_controller"
  /notifications/devices/:
    post:
      tags:
      - "notifications"
      description: "Creates a new FirebaseDevice. If uuid is not provided a new device\
        \ will be created.\nIf a uuid for an existing Safe is provided the FirebaseDevice\
        \ will be updated with all the new data provided.\nSafes provided on the request\
        \ are always added and never removed/replaced"
      operationId: "notifications_devices_create"
      parameters:
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/FirebaseDevice"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/FirebaseDevice"
      x-swagger-router-controller: "swagger_server.controllers.notifications_controller"
  /notifications/devices/{uuid}/:
    delete:
      tags:
      - "notifications"
      description: "Remove a FirebaseDevice"
      operationId: "notifications_devices_delete"
      parameters:
      - name: "uuid"
        in: "path"
        description: "A UUID string identifying this Firebase Device."
        required: true
        type: "string"
        format: "uuid"
      responses:
        "204":
          description: ""
      x-swagger-router-controller: "swagger_server.controllers.notifications_controller"
  /notifications/devices/{uuid}/safes/{address}/:
    delete:
      tags:
      - "notifications"
      description: "Remove a Safe for a FirebaseDevice"
      operationId: "notifications_devices_safes_delete"
      parameters:
      - name: "address"
        in: "path"
        required: true
        type: "string"
      - name: "uuid"
        in: "path"
        description: "A UUID string identifying this Firebase Device."
        required: true
        type: "string"
        format: "uuid"
      responses:
        "204":
          description: ""
      x-swagger-router-controller: "swagger_server.controllers.notifications_controller"
  /owners/{address}/:
    get:
      tags:
      - "owners"
      description: "Return Safes where the address provided is an owner"
      operationId: "owners_read"
      parameters:
      - name: "address"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/OwnerResponse"
        "422":
          description: "Owner address checksum not valid"
      x-swagger-router-controller: "swagger_server.controllers.owners_controller"
  /safes/{address}/:
    get:
      tags:
      - "safes"
      description: "Get status of the safe"
      operationId: "safes_read"
      parameters:
      - name: "address"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/SafeInfoResponse"
        "404":
          description: "Safe not found"
        "422":
          description: "code = 1: Checksum address validation failed\ncode = 50: Cannot\
            \ get Safe info"
      x-swagger-router-controller: "swagger_server.controllers.safes_controller"
  /safes/{address}/all-transactions/:
    get:
      tags:
      - "safes"
      description: "Returns a paginated list of transactions for a Safe. The list\
        \ has different structures depending on the\ntransaction type:\n- Multisig\
        \ Transactions for a Safe. `tx_type=MULTISIG_TRANSACTION`. If the query parameter\
        \ `queued=False` is\nset only the transactions with `safe nonce < current\
        \ Safe nonce` will be displayed. By default, only the\n`trusted` transactions\
        \ will be displayed (transactions indexed, with at least one confirmation\
        \ or proposed\nby a delegate). If you need that behaviour to be disabled set\
        \ the query parameter `trusted=False`\n- Module Transactions for a Safe. `tx_type=MODULE_TRANSACTION`\n\
        - Incoming Transfers of Ether/ERC20 Tokens/ERC721 Tokens. `tx_type=ETHEREUM_TRANSACTION`"
      operationId: "safes_all_transactions_list"
      parameters:
      - name: "address"
        in: "path"
        required: true
        type: "string"
      - name: "ordering"
        in: "query"
        description: "Which field to use when ordering the results."
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "Number of results to return per page."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "The initial index from which to return the results."
        required: false
        type: "integer"
      - name: "queued"
        in: "query"
        description: "If `True` transactions with `nonce >= Safe current nonce` are\
          \ also returned"
        required: false
        type: "boolean"
        default: true
      - name: "trusted"
        in: "query"
        description: "If `True` just trusted transactions are shown (indexed, added\
          \ by a delegate or with at least one confirmation)"
        required: false
        type: "boolean"
        default: true
      responses:
        "200":
          description: "A list with every element with the structure of one of these\
            \ transactiontypes"
          schema:
            $ref: "#/definitions/_AllTransactionsSchema"
        "422":
          description: "code = 1: Checksum address validation failed"
      x-swagger-router-controller: "swagger_server.controllers.safes_controller"
  /safes/{address}/balances/:
    get:
      tags:
      - "safes"
      description: "Get balance for Ether and ERC20 tokens"
      operationId: "safes_balances_list"
      parameters:
      - name: "address"
        in: "path"
        required: true
        type: "string"
      - name: "trusted"
        in: "query"
        description: "If `True` just trusted tokens will be returned"
        required: false
        type: "boolean"
        default: false
      - name: "exclude_spam"
        in: "query"
        description: "If `True` spam tokens will not be returned"
        required: false
        type: "boolean"
        default: false
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/SafeBalanceResponse"
        "404":
          description: "Safe not found"
        "422":
          description: "Safe address checksum not valid"
      x-swagger-router-controller: "swagger_server.controllers.safes_controller"
  /safes/{address}/balances/usd/:
    get:
      tags:
      - "safes"
      description: "Get balance for Ether and ERC20 tokens with USD fiat conversion"
      operationId: "safes_balances_usd_list"
      parameters:
      - name: "address"
        in: "path"
        required: true
        type: "string"
      - name: "trusted"
        in: "query"
        description: "If `True` just trusted tokens will be returned"
        required: false
        type: "boolean"
        default: false
      - name: "exclude_spam"
        in: "query"
        description: "If `True` spam tokens will not be returned"
        required: false
        type: "boolean"
        default: false
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/SafeBalanceUsdResponse"
        "404":
          description: "Safe not found"
        "422":
          description: "Safe address checksum not valid"
      x-swagger-router-controller: "swagger_server.controllers.safes_controller"
  /safes/{address}/collectibles/:
    get:
      tags:
      - "safes"
      description: "Get collectibles (ERC721 tokens) and information about them"
      operationId: "safes_collectibles_list"
      parameters:
      - name: "address"
        in: "path"
        required: true
        type: "string"
      - name: "trusted"
        in: "query"
        description: "If `True` just trusted tokens will be returned"
        required: false
        type: "boolean"
        default: false
      - name: "exclude_spam"
        in: "query"
        description: "If `True` spam tokens will not be returned"
        required: false
        type: "boolean"
        default: false
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/SafeCollectibleResponse"
        "404":
          description: "Safe not found"
        "422":
          description: "Safe address checksum not valid"
      x-swagger-router-controller: "swagger_server.controllers.safes_controller"
  /safes/{address}/creation/:
    get:
      tags:
      - "safes"
      description: "Get status of the safe"
      operationId: "safes_creation_list"
      parameters:
      - name: "address"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/SafeCreationInfoResponse"
        "404":
          description: "Safe creation not found"
        "422":
          description: "Owner address checksum not valid"
        "503":
          description: "Problem connecting to Ethereum network"
      x-swagger-router-controller: "swagger_server.controllers.safes_controller"
  /safes/{address}/delegates/:
    get:
      tags:
      - "safes"
      description: "Get the list of delegates for a Safe address"
      operationId: "safes_delegates_list"
      parameters:
      - name: "address"
        in: "path"
        required: true
        type: "string"
      - name: "limit"
        in: "query"
        description: "Number of results to return per page."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "The initial index from which to return the results."
        required: false
        type: "integer"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_3"
        "400":
          description: "Invalid data"
        "422":
          description: "Invalid Ethereum address"
      x-swagger-router-controller: "swagger_server.controllers.safes_controller"
    post:
      tags:
      - "safes"
      description: "Create a delegate for a Safe address with a custom label. Calls\
        \ with same delegate but different label or\nsigner will update the label\
        \ or delegator if different.\nFor the signature we are using TOTP with `T0=0`\
        \ and `Tx=3600`. TOTP is calculated by taking the\nUnix UTC epoch time (no\
        \ milliseconds) and dividing by 3600 (natural division, no decimals)\nFor\
        \ signature this hash need to be signed: keccak(address + str(int(current_epoch\
        \ // 3600)))\nFor example:\n     - we want to add the owner `0x132512f995866CcE1b0092384A6118EDaF4508Ff`\
        \ and `epoch=1586779140`.\n     - TOTP = epoch // 3600 = 1586779140 // 3600\
        \ = 440771\n     - The hash to sign by a Safe owner would be `keccak(\"0x132512f995866CcE1b0092384A6118EDaF4508Ff440771\"\
        )`"
      operationId: "safes_delegates_create"
      parameters:
      - name: "address"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/SafeDelegate"
      responses:
        "202":
          description: "Accepted"
        "400":
          description: "Malformed data"
        "422":
          description: "Invalid Ethereum address/Error processing data"
      x-swagger-router-controller: "swagger_server.controllers.safes_controller"
  /safes/{address}/delegates/{delegate_address}/:
    delete:
      tags:
      - "safes"
      description: "Delete a delegate for a Safe. Signature is built the same way\
        \ that for adding a delegate.\nCheck `POST /delegates/`"
      operationId: "safes_delegates_delete"
      parameters:
      - name: "address"
        in: "path"
        required: true
        type: "string"
      - name: "delegate_address"
        in: "path"
        required: true
        type: "string"
      responses:
        "204":
          description: "Deleted"
        "400":
          description: "Malformed data"
        "404":
          description: "Delegate not found"
        "422":
          description: "Invalid Ethereum address/Error processing data"
      x-swagger-router-controller: "swagger_server.controllers.safes_controller"
  /safes/{address}/incoming-transactions/:
    get:
      tags:
      - "safes"
      description: "Returns the history of a multisig tx (safe)"
      operationId: "safes_incoming_transactions_list"
      parameters:
      - name: "address"
        in: "path"
        required: true
        type: "string"
      - name: "_from"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "block_number"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "block_number__gt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "block_number__lt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "execution_date__gte"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "execution_date__lte"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "execution_date__gt"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "execution_date__lt"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "to"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "token_address"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "transaction_hash"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "value"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "value__gt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "value__lt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "limit"
        in: "query"
        description: "Number of results to return per page."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "The initial index from which to return the results."
        required: false
        type: "integer"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TransferResponse"
        "422":
          description: "Safe address checksum not valid"
      x-swagger-router-controller: "swagger_server.controllers.safes_controller"
  /safes/{address}/incoming-transfers/:
    get:
      tags:
      - "safes"
      description: "Returns the history of a multisig tx (safe)"
      operationId: "safes_incoming_transfers_list"
      parameters:
      - name: "address"
        in: "path"
        required: true
        type: "string"
      - name: "_from"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "block_number"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "block_number__gt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "block_number__lt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "execution_date__gte"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "execution_date__lte"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "execution_date__gt"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "execution_date__lt"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "to"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "token_address"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "transaction_hash"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "value"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "value__gt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "value__lt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "limit"
        in: "query"
        description: "Number of results to return per page."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "The initial index from which to return the results."
        required: false
        type: "integer"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TransferResponse"
        "422":
          description: "Safe address checksum not valid"
      x-swagger-router-controller: "swagger_server.controllers.safes_controller"
  /safes/{address}/module-transactions/:
    get:
      tags:
      - "safes"
      description: "Returns the module transaction of a Safe"
      operationId: "safes_module_transactions_list"
      parameters:
      - name: "address"
        in: "path"
        required: true
        type: "string"
      - name: "safe"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "module"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "to"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "operation"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "failed"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "block_number"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "block_number__gt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "block_number__lt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "transaction_hash"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "ordering"
        in: "query"
        description: "Which field to use when ordering the results."
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "Number of results to return per page."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "The initial index from which to return the results."
        required: false
        type: "integer"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_4"
        "400":
          description: "Invalid data"
        "422":
          description: "Invalid ethereum address"
      x-swagger-router-controller: "swagger_server.controllers.safes_controller"
  /safes/{address}/multisig-transactions/:
    get:
      tags:
      - "safes"
      description: "Returns the history of a multisig tx (safe)"
      operationId: "safes_multisig_transactions_list"
      parameters:
      - name: "address"
        in: "path"
        required: true
        type: "string"
      - name: "failed"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "modified__lt"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "modified__gt"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "modified__lte"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "modified__gte"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "nonce__lt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "nonce__gt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "nonce__lte"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "nonce__gte"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "nonce"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "safe_tx_hash"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "to"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "value__lt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "value__gt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "value"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "executed"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "has_confirmations"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "trusted"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "execution_date__gte"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "execution_date__lte"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "submission_date__gte"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "submission_date__lte"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "transaction_hash"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "ordering"
        in: "query"
        description: "Which field to use when ordering the results."
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "Number of results to return per page."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "The initial index from which to return the results."
        required: false
        type: "integer"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_5"
        "400":
          description: "Invalid data"
        "422":
          description: "Invalid ethereum address"
      x-swagger-router-controller: "swagger_server.controllers.safes_controller"
    post:
      tags:
      - "safes"
      description: "Creates a Multisig Transaction with its confirmations and retrieves\
        \ all the information related."
      operationId: "safes_multisig_transactions_create"
      parameters:
      - name: "address"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/SafeMultisigTransaction"
      responses:
        "201":
          description: "Created or signature updated"
        "400":
          description: "Invalid data"
        "422":
          description: "Invalid ethereum address/User is not an owner/Invalid safeTxHash/Invalid\
            \ signature/Nonce already executed/Sender is not an owner"
      x-swagger-router-controller: "swagger_server.controllers.safes_controller"
  /safes/{address}/transactions/:
    get:
      tags:
      - "safes"
      description: "Returns the history of a multisig tx (safe)"
      operationId: "safes_transactions_list"
      parameters:
      - name: "address"
        in: "path"
        required: true
        type: "string"
      - name: "failed"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "modified__lt"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "modified__gt"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "modified__lte"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "modified__gte"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "nonce__lt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "nonce__gt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "nonce__lte"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "nonce__gte"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "nonce"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "safe_tx_hash"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "to"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "value__lt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "value__gt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "value"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "executed"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "has_confirmations"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "trusted"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "execution_date__gte"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "execution_date__lte"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "submission_date__gte"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "submission_date__lte"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "transaction_hash"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "ordering"
        in: "query"
        description: "Which field to use when ordering the results."
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "Number of results to return per page."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "The initial index from which to return the results."
        required: false
        type: "integer"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_5"
        "400":
          description: "Invalid data"
        "422":
          description: "Invalid ethereum address"
      x-swagger-router-controller: "swagger_server.controllers.safes_controller"
    post:
      tags:
      - "safes"
      description: "Creates a Multisig Transaction with its confirmations and retrieves\
        \ all the information related."
      operationId: "safes_transactions_create"
      parameters:
      - name: "address"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "data"
        required: true
        schema:
          $ref: "#/definitions/SafeMultisigTransaction"
      responses:
        "201":
          description: "Created or signature updated"
        "400":
          description: "Invalid data"
        "422":
          description: "Invalid ethereum address/User is not an owner/Invalid safeTxHash/Invalid\
            \ signature/Nonce already executed/Sender is not an owner"
      x-swagger-router-controller: "swagger_server.controllers.safes_controller"
  /safes/{address}/transfers/:
    get:
      tags:
      - "safes"
      description: "Returns the history of a multisig tx (safe)"
      operationId: "safes_transfers_list"
      parameters:
      - name: "address"
        in: "path"
        required: true
        type: "string"
      - name: "_from"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "block_number"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "block_number__gt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "block_number__lt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "execution_date__gte"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "execution_date__lte"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "execution_date__gt"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "execution_date__lt"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "to"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "token_address"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "transaction_hash"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "value"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "value__gt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "value__lt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "limit"
        in: "query"
        description: "Number of results to return per page."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "The initial index from which to return the results."
        required: false
        type: "integer"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TransferResponse"
        "422":
          description: "Safe address checksum not valid"
      x-swagger-router-controller: "swagger_server.controllers.safes_controller"
  /tokens/:
    get:
      tags:
      - "tokens"
      description: ""
      operationId: "tokens_list"
      parameters:
      - name: "name"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "address"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "symbol"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "decimals__lt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "decimals__gt"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "decimals"
        in: "query"
        description: ""
        required: false
        type: "number"
      - name: "search"
        in: "query"
        description: "A search term."
        required: false
        type: "string"
      - name: "ordering"
        in: "query"
        description: "Which field to use when ordering the results."
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "Number of results to return per page."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "The initial index from which to return the results."
        required: false
        type: "integer"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/inline_response_200_6"
      x-swagger-router-controller: "swagger_server.controllers.tokens_controller"
  /tokens/{address}/:
    get:
      tags:
      - "tokens"
      description: ""
      operationId: "tokens_read"
      parameters:
      - name: "address"
        in: "path"
        description: "A unique value identifying this token."
        required: true
        type: "string"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/TokenInfoResponse"
      x-swagger-router-controller: "swagger_server.controllers.tokens_controller"
  /transactions/{safe_tx_hash}/:
    get:
      tags:
      - "transactions"
      description: ""
      operationId: "transactions_read"
      parameters:
      - name: "safe_tx_hash"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: ""
          schema:
            $ref: "#/definitions/SafeMultisigTransactionResponse"
      x-swagger-router-controller: "swagger_server.controllers.transactions_controller"
securityDefinitions:
  Basic:
    type: "basic"
definitions:
  MasterCopyResponse:
    type: "object"
    required:
    - "address"
    - "version"
    properties:
      address:
        type: "string"
        title: "Address"
      version:
        type: "string"
        title: "Version"
        minLength: 1
    example:
      address: "address"
      version: "version"
  AnalyticsMultisigTxsByOriginResponse:
    type: "object"
    required:
    - "origin"
    - "transactions"
    properties:
      origin:
        type: "string"
        title: "Origin"
        minLength: 1
      transactions:
        type: "integer"
        title: "Transactions"
    example:
      origin: "origin"
      transactions: 0
  AnalyticsMultisigTxsBySafeResponse:
    type: "object"
    required:
    - "masterCopy"
    - "safe"
    - "transactions"
    properties:
      safe:
        type: "string"
        title: "Safe"
      masterCopy:
        type: "string"
        title: "Master copy"
      transactions:
        type: "integer"
        title: "Transactions"
    example:
      safe: "safe"
      masterCopy: "masterCopy"
      transactions: 6
  ContractAbi:
    type: "object"
    required:
    - "abi"
    - "description"
    - "relevance"
    properties:
      abi:
        type: "array"
        items:
          type: "object"
          additionalProperties:
            type: "string"
            x-nullable: true
      description:
        type: "string"
        title: "Description"
        minLength: 1
      relevance:
        type: "integer"
        title: "Relevance"
    example:
      abi:
      - key: "abi"
      - key: "abi"
      description: "description"
      relevance: 6
  Contract:
    type: "object"
    required:
    - "address"
    - "contractAbi"
    - "displayName"
    - "name"
    properties:
      address:
        type: "string"
        title: "Address"
      name:
        type: "string"
        title: "Name"
        minLength: 1
      displayName:
        type: "string"
        title: "Display name"
        minLength: 1
      logoUri:
        type: "string"
        format: "uri"
        title: "Logo uri"
        readOnly: true
      contractAbi:
        $ref: "#/definitions/ContractAbi"
    example:
      address: "address"
      displayName: "displayName"
      name: "name"
      contractAbi:
        abi:
        - key: "abi"
        - key: "abi"
        description: "description"
        relevance: 6
      logoUri: "http://example.com/aeiou"
  SafeMultisigTransactionResponse:
    type: "object"
    required:
    - "baseGas"
    - "confirmationsRequired"
    - "executionDate"
    - "gasPrice"
    - "isExecuted"
    - "modified"
    - "nonce"
    - "operation"
    - "origin"
    - "safe"
    - "safeTxGas"
    - "safeTxHash"
    - "signatures"
    - "submissionDate"
    - "to"
    - "transactionHash"
    - "value"
    properties:
      safe:
        type: "string"
        title: "Safe"
      to:
        type: "string"
        title: "To"
      value:
        type: "string"
        title: "Value"
        minLength: 1
      data:
        type: "string"
        title: "Data"
        x-nullable: true
      operation:
        type: "integer"
        title: "Operation"
        minimum: 0
      gasToken:
        type: "string"
        title: "Gas token"
        x-nullable: true
      safeTxGas:
        type: "integer"
        title: "Safe tx gas"
        minimum: 0
      baseGas:
        type: "integer"
        title: "Base gas"
        minimum: 0
      gasPrice:
        type: "string"
        title: "Gas price"
        minLength: 1
      refundReceiver:
        type: "string"
        title: "Refund receiver"
        x-nullable: true
      nonce:
        type: "integer"
        title: "Nonce"
        minimum: 0
      executionDate:
        type: "string"
        format: "date-time"
        title: "Execution date"
      submissionDate:
        type: "string"
        format: "date-time"
        title: "Submission date"
      modified:
        type: "string"
        format: "date-time"
        title: "Modified"
      blockNumber:
        type: "integer"
        title: "Block number"
        readOnly: true
      transactionHash:
        type: "string"
        title: "Transaction hash"
      safeTxHash:
        type: "string"
        title: "Safe tx hash"
      executor:
        type: "string"
        title: "Executor"
        readOnly: true
      isExecuted:
        type: "boolean"
        title: "Is executed"
      isSuccessful:
        type: "boolean"
        title: "Is successful"
        readOnly: true
      ethGasPrice:
        type: "string"
        title: "Eth gas price"
        readOnly: true
      gasUsed:
        type: "integer"
        title: "Gas used"
        readOnly: true
      fee:
        type: "integer"
        title: "Fee"
        readOnly: true
      origin:
        type: "string"
        title: "Origin"
        minLength: 1
      dataDecoded:
        type: "string"
        title: "Data decoded"
        readOnly: true
      confirmationsRequired:
        type: "integer"
        title: "Confirmations required"
      confirmations:
        type: "string"
        title: "Confirmations"
        readOnly: true
      signatures:
        type: "string"
        title: "Signatures"
    example:
      confirmationsRequired: 9
      data: "data"
      gasToken: "gasToken"
      fee: 7
      origin: "origin"
      executionDate: "2000-01-23T04:56:07.000+00:00"
      dataDecoded: "dataDecoded"
      transactionHash: "transactionHash"
      signatures: "signatures"
      safeTxHash: "safeTxHash"
      gasUsed: 2
      safeTxGas: 0
      isSuccessful: true
      executor: "executor"
      modified: "2000-01-23T04:56:07.000+00:00"
      value: "value"
      gasPrice: "gasPrice"
      baseGas: 0
      isExecuted: true
      submissionDate: "2000-01-23T04:56:07.000+00:00"
      confirmations: "confirmations"
      nonce: 0
      ethGasPrice: "ethGasPrice"
      refundReceiver: "refundReceiver"
      blockNumber: 5
      safe: "safe"
      to: "to"
      operation: 0
  SafeMultisigConfirmationResponse:
    type: "object"
    required:
    - "owner"
    - "signature"
    - "submissionDate"
    properties:
      owner:
        type: "string"
        title: "Owner"
        minLength: 1
        maxLength: 42
      submissionDate:
        type: "string"
        format: "date-time"
        title: "Submission date"
      transactionHash:
        type: "string"
        title: "Transaction hash"
        readOnly: true
      confirmationType:
        type: "string"
        title: "Confirmation type"
        readOnly: true
      signature:
        type: "string"
        title: "Signature"
      signatureType:
        type: "string"
        title: "Signature type"
        readOnly: true
    example:
      owner: "owner"
      confirmationType: "confirmationType"
      signature: "signature"
      signatureType: "signatureType"
      submissionDate: "2000-01-23T04:56:07.000+00:00"
      transactionHash: "transactionHash"
  SafeMultisigConfirmation:
    type: "object"
    required:
    - "signature"
    properties:
      signature:
        type: "string"
        title: "Signature"
    example:
      signature: "signature"
  FirebaseDevice:
    type: "object"
    required:
    - "buildNumber"
    - "bundle"
    - "cloudMessagingToken"
    - "deviceType"
    - "safes"
    - "version"
    properties:
      uuid:
        type: "string"
        format: "uuid"
        title: "Uuid"
        default: "0bb19a6d-393d-45ba-9908-664d581e8078"
      safes:
        type: "array"
        items:
          type: "string"
      cloudMessagingToken:
        type: "string"
        title: "Cloud messaging token"
        minLength: 100
        maxLength: 200
      buildNumber:
        type: "integer"
        title: "Build number"
        minimum: 0
      bundle:
        type: "string"
        title: "Bundle"
        minLength: 1
        maxLength: 100
      deviceType:
        type: "string"
        title: "Device type"
        enum:
        - "ANDROID"
        - "IOS"
        - "WEB"
      version:
        type: "string"
        title: "Version"
        minLength: 1
        maxLength: 100
      timestamp:
        type: "integer"
        title: "Timestamp"
      signatures:
        type: "array"
        items:
          type: "string"
    example:
      deviceType: "ANDROID"
      safes:
      - "safes"
      - "safes"
      cloudMessagingToken: "cloudMessagingToken"
      uuid: "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
      buildNumber: 0
      bundle: "bundle"
      version: "version"
      signatures:
      - "signatures"
      - "signatures"
      timestamp: 6
  OwnerResponse:
    type: "object"
    required:
    - "safes"
    properties:
      safes:
        type: "array"
        items:
          type: "string"
    example:
      safes:
      - "safes"
      - "safes"
  SafeInfoResponse:
    type: "object"
    required:
    - "address"
    - "fallbackHandler"
    - "masterCopy"
    - "modules"
    - "nonce"
    - "owners"
    - "threshold"
    - "version"
    properties:
      address:
        type: "string"
        title: "Address"
      nonce:
        type: "integer"
        title: "Nonce"
      threshold:
        type: "integer"
        title: "Threshold"
      owners:
        type: "array"
        items:
          type: "string"
      masterCopy:
        type: "string"
        title: "Master copy"
      modules:
        type: "array"
        items:
          type: "string"
      fallbackHandler:
        type: "string"
        title: "Fallback handler"
      version:
        type: "string"
        title: "Version"
        minLength: 1
    example:
      address: "address"
      threshold: 6
      owners:
      - "owners"
      - "owners"
      masterCopy: "masterCopy"
      nonce: 0
      version: "version"
      modules:
      - "modules"
      - "modules"
      fallbackHandler: "fallbackHandler"
  TokenInfoResponse:
    type: "object"
    required:
    - "address"
    - "decimals"
    - "name"
    - "symbol"
    properties:
      type:
        type: "string"
        title: "Type"
        readOnly: true
      address:
        type: "string"
        title: "Address"
      name:
        type: "string"
        title: "Name"
        minLength: 1
      symbol:
        type: "string"
        title: "Symbol"
        minLength: 1
      decimals:
        type: "integer"
        title: "Decimals"
      logoUri:
        type: "string"
        title: "Logo uri"
        readOnly: true
    example:
      symbol: "symbol"
      address: "address"
      decimals: 5
      name: "name"
      logoUri: "logoUri"
      type: "type"
  TransferWithTokenInfoResponse:
    type: "object"
    required:
    - "blockNumber"
    - "executionDate"
    - "from"
    - "to"
    - "tokenId"
    - "tokenInfo"
    - "transactionHash"
    - "value"
    properties:
      type:
        type: "string"
        title: "Type"
        readOnly: true
      executionDate:
        type: "string"
        format: "date-time"
        title: "Execution date"
      blockNumber:
        type: "integer"
        title: "Block number"
      transactionHash:
        type: "string"
        title: "Transaction hash"
      to:
        type: "string"
        title: "To"
      value:
        type: "string"
        title: "Value"
        minLength: 1
        x-nullable: true
      tokenId:
        type: "string"
        title: "Token id"
        minLength: 1
        x-nullable: true
      tokenAddress:
        type: "string"
        title: "Token address"
        x-nullable: true
      tokenInfo:
        $ref: "#/definitions/TokenInfoResponse"
      from:
        type: "string"
        title: "From"
    example:
      tokenAddress: "tokenAddress"
      tokenId: "tokenId"
      blockNumber: 1
      executionDate: "2000-01-23T04:56:07.000+00:00"
      from: "from"
      to: "to"
      type: "type"
      value: "value"
      transactionHash: "transactionHash"
      tokenInfo:
        symbol: "symbol"
        address: "address"
        decimals: 5
        name: "name"
        logoUri: "logoUri"
        type: "type"
  SafeModuleTransactionWithTransfersResponse:
    type: "object"
    required:
    - "data"
    - "executionDate"
    - "module"
    - "operation"
    - "safe"
    - "to"
    - "transfers"
    - "value"
    properties:
      created:
        type: "string"
        format: "date-time"
        title: "Created"
        readOnly: true
      executionDate:
        type: "string"
        format: "date-time"
        title: "Execution date"
      blockNumber:
        type: "integer"
        title: "Block number"
        readOnly: true
      transactionHash:
        type: "string"
        title: "Transaction hash"
        readOnly: true
      safe:
        type: "string"
        title: "Safe"
        minLength: 1
        maxLength: 42
      module:
        type: "string"
        title: "Module"
        minLength: 1
        maxLength: 42
      to:
        type: "string"
        title: "To"
        minLength: 1
        maxLength: 42
      value:
        type: "string"
        format: "decimal"
        title: "Value"
      data:
        type: "string"
        title: "Data"
        x-nullable: true
      operation:
        type: "integer"
        title: "Operation"
      dataDecoded:
        type: "string"
        title: "Data decoded"
        readOnly: true
      transfers:
        type: "array"
        items:
          $ref: "#/definitions/TransferWithTokenInfoResponse"
      txType:
        type: "string"
        title: "Tx type"
        readOnly: true
    example:
      data: "data"
      created: "2000-01-23T04:56:07.000+00:00"
      module: "module"
      executionDate: "2000-01-23T04:56:07.000+00:00"
      dataDecoded: "dataDecoded"
      txType: "txType"
      transactionHash: "transactionHash"
      transfers:
      - tokenAddress: "tokenAddress"
        tokenId: "tokenId"
        blockNumber: 1
        executionDate: "2000-01-23T04:56:07.000+00:00"
        from: "from"
        to: "to"
        type: "type"
        value: "value"
        transactionHash: "transactionHash"
        tokenInfo:
          symbol: "symbol"
          address: "address"
          decimals: 5
          name: "name"
          logoUri: "logoUri"
          type: "type"
      - tokenAddress: "tokenAddress"
        tokenId: "tokenId"
        blockNumber: 1
        executionDate: "2000-01-23T04:56:07.000+00:00"
        from: "from"
        to: "to"
        type: "type"
        value: "value"
        transactionHash: "transactionHash"
        tokenInfo:
          symbol: "symbol"
          address: "address"
          decimals: 5
          name: "name"
          logoUri: "logoUri"
          type: "type"
      blockNumber: 0
      safe: "safe"
      to: "to"
      value: "value"
      operation: 6
  SafeMultisigTransactionWithTransfersResponse:
    type: "object"
    required:
    - "baseGas"
    - "confirmationsRequired"
    - "executionDate"
    - "gasPrice"
    - "isExecuted"
    - "modified"
    - "nonce"
    - "operation"
    - "origin"
    - "safe"
    - "safeTxGas"
    - "safeTxHash"
    - "signatures"
    - "submissionDate"
    - "to"
    - "transactionHash"
    - "transfers"
    - "value"
    properties:
      safe:
        type: "string"
        title: "Safe"
      to:
        type: "string"
        title: "To"
      value:
        type: "string"
        title: "Value"
        minLength: 1
      data:
        type: "string"
        title: "Data"
        x-nullable: true
      operation:
        type: "integer"
        title: "Operation"
        minimum: 0
      gasToken:
        type: "string"
        title: "Gas token"
        x-nullable: true
      safeTxGas:
        type: "integer"
        title: "Safe tx gas"
        minimum: 0
      baseGas:
        type: "integer"
        title: "Base gas"
        minimum: 0
      gasPrice:
        type: "string"
        title: "Gas price"
        minLength: 1
      refundReceiver:
        type: "string"
        title: "Refund receiver"
        x-nullable: true
      nonce:
        type: "integer"
        title: "Nonce"
        minimum: 0
      executionDate:
        type: "string"
        format: "date-time"
        title: "Execution date"
      submissionDate:
        type: "string"
        format: "date-time"
        title: "Submission date"
      modified:
        type: "string"
        format: "date-time"
        title: "Modified"
      blockNumber:
        type: "integer"
        title: "Block number"
        readOnly: true
      transactionHash:
        type: "string"
        title: "Transaction hash"
      safeTxHash:
        type: "string"
        title: "Safe tx hash"
      executor:
        type: "string"
        title: "Executor"
        readOnly: true
      isExecuted:
        type: "boolean"
        title: "Is executed"
      isSuccessful:
        type: "boolean"
        title: "Is successful"
        readOnly: true
      ethGasPrice:
        type: "string"
        title: "Eth gas price"
        readOnly: true
      gasUsed:
        type: "integer"
        title: "Gas used"
        readOnly: true
      fee:
        type: "integer"
        title: "Fee"
        readOnly: true
      origin:
        type: "string"
        title: "Origin"
        minLength: 1
      dataDecoded:
        type: "string"
        title: "Data decoded"
        readOnly: true
      confirmationsRequired:
        type: "integer"
        title: "Confirmations required"
      confirmations:
        type: "string"
        title: "Confirmations"
        readOnly: true
      signatures:
        type: "string"
        title: "Signatures"
      transfers:
        type: "array"
        items:
          $ref: "#/definitions/TransferWithTokenInfoResponse"
      txType:
        type: "string"
        title: "Tx type"
        readOnly: true
    example:
      confirmationsRequired: 7
      data: "data"
      gasToken: "gasToken"
      fee: 4
      origin: "origin"
      executionDate: "2000-01-23T04:56:07.000+00:00"
      dataDecoded: "dataDecoded"
      transactionHash: "transactionHash"
      signatures: "signatures"
      safeTxHash: "safeTxHash"
      gasUsed: 2
      safeTxGas: 0
      isSuccessful: true
      executor: "executor"
      transfers:
      - tokenAddress: "tokenAddress"
        tokenId: "tokenId"
        blockNumber: 1
        executionDate: "2000-01-23T04:56:07.000+00:00"
        from: "from"
        to: "to"
        type: "type"
        value: "value"
        transactionHash: "transactionHash"
        tokenInfo:
          symbol: "symbol"
          address: "address"
          decimals: 5
          name: "name"
          logoUri: "logoUri"
          type: "type"
      - tokenAddress: "tokenAddress"
        tokenId: "tokenId"
        blockNumber: 1
        executionDate: "2000-01-23T04:56:07.000+00:00"
        from: "from"
        to: "to"
        type: "type"
        value: "value"
        transactionHash: "transactionHash"
        tokenInfo:
          symbol: "symbol"
          address: "address"
          decimals: 5
          name: "name"
          logoUri: "logoUri"
          type: "type"
      modified: "2000-01-23T04:56:07.000+00:00"
      value: "value"
      gasPrice: "gasPrice"
      baseGas: 0
      isExecuted: true
      submissionDate: "2000-01-23T04:56:07.000+00:00"
      txType: "txType"
      confirmations: "confirmations"
      nonce: 0
      ethGasPrice: "ethGasPrice"
      refundReceiver: "refundReceiver"
      blockNumber: 3
      safe: "safe"
      to: "to"
      operation: 0
  EthereumTxWithTransfersResponse:
    type: "object"
    required:
    - "data"
    - "executionDate"
    - "from"
    - "to"
    - "transfers"
    - "txHash"
    properties:
      executionDate:
        type: "string"
        format: "date-time"
        title: "Execution date"
      to:
        type: "string"
        title: "To"
        x-nullable: true
      data:
        type: "string"
        title: "Data"
      txHash:
        type: "string"
        title: "Tx hash"
      blockNumber:
        type: "string"
        title: "Block number"
        readOnly: true
      transfers:
        type: "array"
        items:
          $ref: "#/definitions/TransferWithTokenInfoResponse"
      txType:
        type: "string"
        title: "Tx type"
        readOnly: true
      from:
        type: "string"
        title: "From"
    example:
      data: "data"
      transfers:
      - tokenAddress: "tokenAddress"
        tokenId: "tokenId"
        blockNumber: 1
        executionDate: "2000-01-23T04:56:07.000+00:00"
        from: "from"
        to: "to"
        type: "type"
        value: "value"
        transactionHash: "transactionHash"
        tokenInfo:
          symbol: "symbol"
          address: "address"
          decimals: 5
          name: "name"
          logoUri: "logoUri"
          type: "type"
      - tokenAddress: "tokenAddress"
        tokenId: "tokenId"
        blockNumber: 1
        executionDate: "2000-01-23T04:56:07.000+00:00"
        from: "from"
        to: "to"
        type: "type"
        value: "value"
        transactionHash: "transactionHash"
        tokenInfo:
          symbol: "symbol"
          address: "address"
          decimals: 5
          name: "name"
          logoUri: "logoUri"
          type: "type"
      blockNumber: "blockNumber"
      executionDate: "2000-01-23T04:56:07.000+00:00"
      from: "from"
      to: "to"
      txType: "txType"
      txHash: "txHash"
  _AllTransactionsSchema:
    type: "object"
    required:
    - "txType1"
    - "txType2"
    - "txType3"
    properties:
      txType1:
        $ref: "#/definitions/SafeModuleTransactionWithTransfersResponse"
      txType2:
        $ref: "#/definitions/SafeMultisigTransactionWithTransfersResponse"
      txType3:
        $ref: "#/definitions/EthereumTxWithTransfersResponse"
    example:
      txType1:
        data: "data"
        created: "2000-01-23T04:56:07.000+00:00"
        module: "module"
        executionDate: "2000-01-23T04:56:07.000+00:00"
        dataDecoded: "dataDecoded"
        txType: "txType"
        transactionHash: "transactionHash"
        transfers:
        - tokenAddress: "tokenAddress"
          tokenId: "tokenId"
          blockNumber: 1
          executionDate: "2000-01-23T04:56:07.000+00:00"
          from: "from"
          to: "to"
          type: "type"
          value: "value"
          transactionHash: "transactionHash"
          tokenInfo:
            symbol: "symbol"
            address: "address"
            decimals: 5
            name: "name"
            logoUri: "logoUri"
            type: "type"
        - tokenAddress: "tokenAddress"
          tokenId: "tokenId"
          blockNumber: 1
          executionDate: "2000-01-23T04:56:07.000+00:00"
          from: "from"
          to: "to"
          type: "type"
          value: "value"
          transactionHash: "transactionHash"
          tokenInfo:
            symbol: "symbol"
            address: "address"
            decimals: 5
            name: "name"
            logoUri: "logoUri"
            type: "type"
        blockNumber: 0
        safe: "safe"
        to: "to"
        value: "value"
        operation: 6
      txType2:
        confirmationsRequired: 7
        data: "data"
        gasToken: "gasToken"
        fee: 4
        origin: "origin"
        executionDate: "2000-01-23T04:56:07.000+00:00"
        dataDecoded: "dataDecoded"
        transactionHash: "transactionHash"
        signatures: "signatures"
        safeTxHash: "safeTxHash"
        gasUsed: 2
        safeTxGas: 0
        isSuccessful: true
        executor: "executor"
        transfers:
        - tokenAddress: "tokenAddress"
          tokenId: "tokenId"
          blockNumber: 1
          executionDate: "2000-01-23T04:56:07.000+00:00"
          from: "from"
          to: "to"
          type: "type"
          value: "value"
          transactionHash: "transactionHash"
          tokenInfo:
            symbol: "symbol"
            address: "address"
            decimals: 5
            name: "name"
            logoUri: "logoUri"
            type: "type"
        - tokenAddress: "tokenAddress"
          tokenId: "tokenId"
          blockNumber: 1
          executionDate: "2000-01-23T04:56:07.000+00:00"
          from: "from"
          to: "to"
          type: "type"
          value: "value"
          transactionHash: "transactionHash"
          tokenInfo:
            symbol: "symbol"
            address: "address"
            decimals: 5
            name: "name"
            logoUri: "logoUri"
            type: "type"
        modified: "2000-01-23T04:56:07.000+00:00"
        value: "value"
        gasPrice: "gasPrice"
        baseGas: 0
        isExecuted: true
        submissionDate: "2000-01-23T04:56:07.000+00:00"
        txType: "txType"
        confirmations: "confirmations"
        nonce: 0
        ethGasPrice: "ethGasPrice"
        refundReceiver: "refundReceiver"
        blockNumber: 3
        safe: "safe"
        to: "to"
        operation: 0
      txType3:
        data: "data"
        transfers:
        - tokenAddress: "tokenAddress"
          tokenId: "tokenId"
          blockNumber: 1
          executionDate: "2000-01-23T04:56:07.000+00:00"
          from: "from"
          to: "to"
          type: "type"
          value: "value"
          transactionHash: "transactionHash"
          tokenInfo:
            symbol: "symbol"
            address: "address"
            decimals: 5
            name: "name"
            logoUri: "logoUri"
            type: "type"
        - tokenAddress: "tokenAddress"
          tokenId: "tokenId"
          blockNumber: 1
          executionDate: "2000-01-23T04:56:07.000+00:00"
          from: "from"
          to: "to"
          type: "type"
          value: "value"
          transactionHash: "transactionHash"
          tokenInfo:
            symbol: "symbol"
            address: "address"
            decimals: 5
            name: "name"
            logoUri: "logoUri"
            type: "type"
        blockNumber: "blockNumber"
        executionDate: "2000-01-23T04:56:07.000+00:00"
        from: "from"
        to: "to"
        txType: "txType"
        txHash: "txHash"
  Erc20Info:
    type: "object"
    required:
    - "decimals"
    - "logoUri"
    - "name"
    - "symbol"
    properties:
      name:
        type: "string"
        title: "Name"
        minLength: 1
      symbol:
        type: "string"
        title: "Symbol"
        minLength: 1
      decimals:
        type: "integer"
        title: "Decimals"
      logoUri:
        type: "string"
        title: "Logo uri"
        minLength: 1
    example:
      symbol: "symbol"
      decimals: 0
      name: "name"
      logoUri: "logoUri"
  SafeBalanceResponse:
    type: "object"
    required:
    - "balance"
    - "token"
    - "tokenAddress"
    properties:
      tokenAddress:
        type: "string"
        title: "Token address"
        minLength: 1
      token:
        $ref: "#/definitions/Erc20Info"
      balance:
        type: "string"
        title: "Balance"
        minLength: 1
    example:
      tokenAddress: "tokenAddress"
      balance: "balance"
      token:
        symbol: "symbol"
        decimals: 0
        name: "name"
        logoUri: "logoUri"
  SafeBalanceUsdResponse:
    type: "object"
    required:
    - "balance"
    - "fiatBalance"
    - "fiatCode"
    - "fiatConversion"
    - "token"
    - "tokenAddress"
    properties:
      tokenAddress:
        type: "string"
        title: "Token address"
        minLength: 1
      token:
        $ref: "#/definitions/Erc20Info"
      balance:
        type: "string"
        title: "Balance"
        minLength: 1
      fiatBalance:
        type: "string"
        title: "Fiat balance"
        minLength: 1
      fiatConversion:
        type: "string"
        title: "Fiat conversion"
        minLength: 1
      fiatCode:
        type: "string"
        title: "Fiat code"
        minLength: 1
    example:
      tokenAddress: "tokenAddress"
      fiatBalance: "fiatBalance"
      balance: "balance"
      fiatConversion: "fiatConversion"
      fiatCode: "fiatCode"
      token:
        symbol: "symbol"
        decimals: 0
        name: "name"
        logoUri: "logoUri"
  SafeCollectibleResponse:
    type: "object"
    required:
    - "address"
    - "description"
    - "id"
    - "imageUri"
    - "logoUri"
    - "metadata"
    - "name"
    - "tokenName"
    - "tokenSymbol"
    - "uri"
    properties:
      address:
        type: "string"
        title: "Address"
        minLength: 1
      tokenName:
        type: "string"
        title: "Token name"
        minLength: 1
      tokenSymbol:
        type: "string"
        title: "Token symbol"
        minLength: 1
      logoUri:
        type: "string"
        title: "Logo uri"
        minLength: 1
      id:
        type: "string"
        title: "Id"
        minLength: 1
      uri:
        type: "string"
        title: "Uri"
        minLength: 1
      name:
        type: "string"
        title: "Name"
        minLength: 1
      description:
        type: "string"
        title: "Description"
        minLength: 1
      imageUri:
        type: "string"
        title: "Image uri"
        minLength: 1
      metadata:
        type: "object"
        title: "Metadata"
        additionalProperties:
          type: "string"
          x-nullable: true
    example:
      imageUri: "imageUri"
      metadata:
        key: "metadata"
      address: "address"
      tokenSymbol: "tokenSymbol"
      tokenName: "tokenName"
      name: "name"
      description: "description"
      logoUri: "logoUri"
      id: "id"
      uri: "uri"
  SafeCreationInfoResponse:
    type: "object"
    required:
    - "created"
    - "creator"
    - "factoryAddress"
    - "masterCopy"
    - "setupData"
    - "transactionHash"
    properties:
      created:
        type: "string"
        format: "date-time"
        title: "Created"
      creator:
        type: "string"
        title: "Creator"
      transactionHash:
        type: "string"
        title: "Transaction hash"
      factoryAddress:
        type: "string"
        title: "Factory address"
      masterCopy:
        type: "string"
        title: "Master copy"
        x-nullable: true
      setupData:
        type: "string"
        title: "Setup data"
        x-nullable: true
      dataDecoded:
        type: "string"
        title: "Data decoded"
        readOnly: true
    example:
      creator: "creator"
      created: "2000-01-23T04:56:07.000+00:00"
      masterCopy: "masterCopy"
      dataDecoded: "dataDecoded"
      factoryAddress: "factoryAddress"
      transactionHash: "transactionHash"
      setupData: "setupData"
  SafeDelegateResponse:
    type: "object"
    required:
    - "delegate"
    - "delegator"
    - "label"
    properties:
      delegate:
        type: "string"
        title: "Delegate"
      delegator:
        type: "string"
        title: "Delegator"
      label:
        type: "string"
        title: "Label"
        minLength: 1
        maxLength: 50
    example:
      delegate: "delegate"
      delegator: "delegator"
      label: "label"
  SafeDelegate:
    type: "object"
    required:
    - "delegate"
    - "label"
    - "safe"
    - "signature"
    properties:
      safe:
        type: "string"
        title: "Safe"
      delegate:
        type: "string"
        title: "Delegate"
      signature:
        type: "string"
        title: "Signature"
      label:
        type: "string"
        title: "Label"
        minLength: 1
        maxLength: 50
    example:
      delegate: "delegate"
      signature: "signature"
      safe: "safe"
      label: "label"
  TransferResponse:
    type: "object"
    required:
    - "blockNumber"
    - "executionDate"
    - "from"
    - "to"
    - "tokenId"
    - "transactionHash"
    - "value"
    properties:
      type:
        type: "string"
        title: "Type"
        readOnly: true
      executionDate:
        type: "string"
        format: "date-time"
        title: "Execution date"
      blockNumber:
        type: "integer"
        title: "Block number"
      transactionHash:
        type: "string"
        title: "Transaction hash"
      to:
        type: "string"
        title: "To"
      value:
        type: "string"
        title: "Value"
        minLength: 1
        x-nullable: true
      tokenId:
        type: "string"
        title: "Token id"
        minLength: 1
        x-nullable: true
      tokenAddress:
        type: "string"
        title: "Token address"
        x-nullable: true
      from:
        type: "string"
        title: "From"
    example:
      tokenAddress: "tokenAddress"
      tokenId: "tokenId"
      blockNumber: 0
      executionDate: "2000-01-23T04:56:07.000+00:00"
      from: "from"
      to: "to"
      type: "type"
      value: "value"
      transactionHash: "transactionHash"
  SafeModuleTransactionResponse:
    type: "object"
    required:
    - "data"
    - "executionDate"
    - "module"
    - "operation"
    - "safe"
    - "to"
    - "value"
    properties:
      created:
        type: "string"
        format: "date-time"
        title: "Created"
        readOnly: true
      executionDate:
        type: "string"
        format: "date-time"
        title: "Execution date"
      blockNumber:
        type: "integer"
        title: "Block number"
        readOnly: true
      transactionHash:
        type: "string"
        title: "Transaction hash"
        readOnly: true
      safe:
        type: "string"
        title: "Safe"
        minLength: 1
        maxLength: 42
      module:
        type: "string"
        title: "Module"
        minLength: 1
        maxLength: 42
      to:
        type: "string"
        title: "To"
        minLength: 1
        maxLength: 42
      value:
        type: "string"
        format: "decimal"
        title: "Value"
      data:
        type: "string"
        title: "Data"
        x-nullable: true
      operation:
        type: "integer"
        title: "Operation"
      dataDecoded:
        type: "string"
        title: "Data decoded"
        readOnly: true
    example:
      data: "data"
      created: "2000-01-23T04:56:07.000+00:00"
      blockNumber: 6
      module: "module"
      executionDate: "2000-01-23T04:56:07.000+00:00"
      safe: "safe"
      dataDecoded: "dataDecoded"
      to: "to"
      value: "value"
      operation: 1
      transactionHash: "transactionHash"
  SafeMultisigTransaction:
    type: "object"
    required:
    - "baseGas"
    - "contractTransactionHash"
    - "gasPrice"
    - "nonce"
    - "operation"
    - "safe"
    - "safeTxGas"
    - "sender"
    - "to"
    - "value"
    properties:
      safe:
        type: "string"
        title: "Safe"
      to:
        type: "string"
        title: "To"
      value:
        type: "integer"
        title: "Value"
        minimum: 0
      data:
        type: "string"
        title: "Data"
        x-nullable: true
      operation:
        type: "integer"
        title: "Operation"
        minimum: 0
      gasToken:
        type: "string"
        title: "Gas token"
        x-nullable: true
      safeTxGas:
        type: "integer"
        title: "Safe tx gas"
        minimum: 0
      baseGas:
        type: "integer"
        title: "Base gas"
        minimum: 0
      gasPrice:
        type: "integer"
        title: "Gas price"
        minimum: 0
      refundReceiver:
        type: "string"
        title: "Refund receiver"
        x-nullable: true
      nonce:
        type: "integer"
        title: "Nonce"
        minimum: 0
      contractTransactionHash:
        type: "string"
        title: "Contract transaction hash"
      sender:
        type: "string"
        title: "Sender"
      signature:
        type: "string"
        title: "Signature"
      origin:
        type: "string"
        title: "Origin"
        minLength: 1
        maxLength: 200
        x-nullable: true
    example:
      data: "data"
      baseGas: 0
      signature: "signature"
      gasToken: "gasToken"
      contractTransactionHash: "contractTransactionHash"
      origin: "origin"
      nonce: 0
      safeTxGas: 0
      refundReceiver: "refundReceiver"
      sender: "sender"
      safe: "safe"
      to: "to"
      value: 0
      operation: 0
      gasPrice: 0
  inline_response_200:
    type: "object"
    required:
    - "count"
    - "results"
    properties:
      count:
        type: "integer"
      next:
        type: "string"
        format: "uri"
        x-nullable: true
      previous:
        type: "string"
        format: "uri"
        x-nullable: true
      results:
        type: "array"
        items:
          $ref: "#/definitions/AnalyticsMultisigTxsBySafeResponse"
    example:
      next: "http://example.com/aeiou"
      previous: "http://example.com/aeiou"
      count: 0
      results:
      - safe: "safe"
        masterCopy: "masterCopy"
        transactions: 6
      - safe: "safe"
        masterCopy: "masterCopy"
        transactions: 6
  inline_response_200_1:
    type: "object"
    required:
    - "count"
    - "results"
    properties:
      count:
        type: "integer"
      next:
        type: "string"
        format: "uri"
        x-nullable: true
      previous:
        type: "string"
        format: "uri"
        x-nullable: true
      results:
        type: "array"
        items:
          $ref: "#/definitions/Contract"
    example:
      next: "http://example.com/aeiou"
      previous: "http://example.com/aeiou"
      count: 0
      results:
      - address: "address"
        displayName: "displayName"
        name: "name"
        contractAbi:
          abi:
          - key: "abi"
          - key: "abi"
          description: "description"
          relevance: 6
        logoUri: "http://example.com/aeiou"
      - address: "address"
        displayName: "displayName"
        name: "name"
        contractAbi:
          abi:
          - key: "abi"
          - key: "abi"
          description: "description"
          relevance: 6
        logoUri: "http://example.com/aeiou"
  inline_response_200_2:
    type: "object"
    required:
    - "count"
    - "results"
    properties:
      count:
        type: "integer"
      next:
        type: "string"
        format: "uri"
        x-nullable: true
      previous:
        type: "string"
        format: "uri"
        x-nullable: true
      results:
        type: "array"
        items:
          $ref: "#/definitions/SafeMultisigConfirmationResponse"
    example:
      next: "http://example.com/aeiou"
      previous: "http://example.com/aeiou"
      count: 0
      results:
      - owner: "owner"
        confirmationType: "confirmationType"
        signature: "signature"
        signatureType: "signatureType"
        submissionDate: "2000-01-23T04:56:07.000+00:00"
        transactionHash: "transactionHash"
      - owner: "owner"
        confirmationType: "confirmationType"
        signature: "signature"
        signatureType: "signatureType"
        submissionDate: "2000-01-23T04:56:07.000+00:00"
        transactionHash: "transactionHash"
  inline_response_200_3:
    type: "object"
    required:
    - "count"
    - "results"
    properties:
      count:
        type: "integer"
      next:
        type: "string"
        format: "uri"
        x-nullable: true
      previous:
        type: "string"
        format: "uri"
        x-nullable: true
      results:
        type: "array"
        items:
          $ref: "#/definitions/SafeDelegateResponse"
    example:
      next: "http://example.com/aeiou"
      previous: "http://example.com/aeiou"
      count: 0
      results:
      - delegate: "delegate"
        delegator: "delegator"
        label: "label"
      - delegate: "delegate"
        delegator: "delegator"
        label: "label"
  inline_response_200_4:
    type: "object"
    required:
    - "count"
    - "results"
    properties:
      count:
        type: "integer"
      next:
        type: "string"
        format: "uri"
        x-nullable: true
      previous:
        type: "string"
        format: "uri"
        x-nullable: true
      results:
        type: "array"
        items:
          $ref: "#/definitions/SafeModuleTransactionResponse"
    example:
      next: "http://example.com/aeiou"
      previous: "http://example.com/aeiou"
      count: 0
      results:
      - data: "data"
        created: "2000-01-23T04:56:07.000+00:00"
        blockNumber: 6
        module: "module"
        executionDate: "2000-01-23T04:56:07.000+00:00"
        safe: "safe"
        dataDecoded: "dataDecoded"
        to: "to"
        value: "value"
        operation: 1
        transactionHash: "transactionHash"
      - data: "data"
        created: "2000-01-23T04:56:07.000+00:00"
        blockNumber: 6
        module: "module"
        executionDate: "2000-01-23T04:56:07.000+00:00"
        safe: "safe"
        dataDecoded: "dataDecoded"
        to: "to"
        value: "value"
        operation: 1
        transactionHash: "transactionHash"
  inline_response_200_5:
    type: "object"
    required:
    - "count"
    - "results"
    properties:
      count:
        type: "integer"
      next:
        type: "string"
        format: "uri"
        x-nullable: true
      previous:
        type: "string"
        format: "uri"
        x-nullable: true
      results:
        type: "array"
        items:
          $ref: "#/definitions/SafeMultisigTransactionResponse"
    example:
      next: "http://example.com/aeiou"
      previous: "http://example.com/aeiou"
      count: 0
      results:
      - confirmationsRequired: 9
        data: "data"
        gasToken: "gasToken"
        fee: 7
        origin: "origin"
        executionDate: "2000-01-23T04:56:07.000+00:00"
        dataDecoded: "dataDecoded"
        transactionHash: "transactionHash"
        signatures: "signatures"
        safeTxHash: "safeTxHash"
        gasUsed: 2
        safeTxGas: 0
        isSuccessful: true
        executor: "executor"
        modified: "2000-01-23T04:56:07.000+00:00"
        value: "value"
        gasPrice: "gasPrice"
        baseGas: 0
        isExecuted: true
        submissionDate: "2000-01-23T04:56:07.000+00:00"
        confirmations: "confirmations"
        nonce: 0
        ethGasPrice: "ethGasPrice"
        refundReceiver: "refundReceiver"
        blockNumber: 5
        safe: "safe"
        to: "to"
        operation: 0
      - confirmationsRequired: 9
        data: "data"
        gasToken: "gasToken"
        fee: 7
        origin: "origin"
        executionDate: "2000-01-23T04:56:07.000+00:00"
        dataDecoded: "dataDecoded"
        transactionHash: "transactionHash"
        signatures: "signatures"
        safeTxHash: "safeTxHash"
        gasUsed: 2
        safeTxGas: 0
        isSuccessful: true
        executor: "executor"
        modified: "2000-01-23T04:56:07.000+00:00"
        value: "value"
        gasPrice: "gasPrice"
        baseGas: 0
        isExecuted: true
        submissionDate: "2000-01-23T04:56:07.000+00:00"
        confirmations: "confirmations"
        nonce: 0
        ethGasPrice: "ethGasPrice"
        refundReceiver: "refundReceiver"
        blockNumber: 5
        safe: "safe"
        to: "to"
        operation: 0
  inline_response_200_6:
    type: "object"
    required:
    - "count"
    - "results"
    properties:
      count:
        type: "integer"
      next:
        type: "string"
        format: "uri"
        x-nullable: true
      previous:
        type: "string"
        format: "uri"
        x-nullable: true
      results:
        type: "array"
        items:
          $ref: "#/definitions/TokenInfoResponse"
    example:
      next: "http://example.com/aeiou"
      previous: "http://example.com/aeiou"
      count: 0
      results:
      - symbol: "symbol"
        address: "address"
        decimals: 5
        name: "name"
        logoUri: "logoUri"
        type: "type"
      - symbol: "symbol"
        address: "address"
        decimals: 5
        name: "name"
        logoUri: "logoUri"
        type: "type"
