# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class SafeCreationInfoResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, created: datetime=None, creator: str=None, transaction_hash: str=None, factory_address: str=None, master_copy: str=None, setup_data: str=None, data_decoded: str=None):  # noqa: E501
        """SafeCreationInfoResponse - a model defined in Swagger

        :param created: The created of this SafeCreationInfoResponse.  # noqa: E501
        :type created: datetime
        :param creator: The creator of this SafeCreationInfoResponse.  # noqa: E501
        :type creator: str
        :param transaction_hash: The transaction_hash of this SafeCreationInfoResponse.  # noqa: E501
        :type transaction_hash: str
        :param factory_address: The factory_address of this SafeCreationInfoResponse.  # noqa: E501
        :type factory_address: str
        :param master_copy: The master_copy of this SafeCreationInfoResponse.  # noqa: E501
        :type master_copy: str
        :param setup_data: The setup_data of this SafeCreationInfoResponse.  # noqa: E501
        :type setup_data: str
        :param data_decoded: The data_decoded of this SafeCreationInfoResponse.  # noqa: E501
        :type data_decoded: str
        """
        self.swagger_types = {
            'created': datetime,
            'creator': str,
            'transaction_hash': str,
            'factory_address': str,
            'master_copy': str,
            'setup_data': str,
            'data_decoded': str
        }

        self.attribute_map = {
            'created': 'created',
            'creator': 'creator',
            'transaction_hash': 'transactionHash',
            'factory_address': 'factoryAddress',
            'master_copy': 'masterCopy',
            'setup_data': 'setupData',
            'data_decoded': 'dataDecoded'
        }

        self._created = created
        self._creator = creator
        self._transaction_hash = transaction_hash
        self._factory_address = factory_address
        self._master_copy = master_copy
        self._setup_data = setup_data
        self._data_decoded = data_decoded

    @classmethod
    def from_dict(cls, dikt) -> 'SafeCreationInfoResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SafeCreationInfoResponse of this SafeCreationInfoResponse.  # noqa: E501
        :rtype: SafeCreationInfoResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created(self) -> datetime:
        """Gets the created of this SafeCreationInfoResponse.


        :return: The created of this SafeCreationInfoResponse.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created: datetime):
        """Sets the created of this SafeCreationInfoResponse.


        :param created: The created of this SafeCreationInfoResponse.
        :type created: datetime
        """
        if created is None:
            raise ValueError("Invalid value for `created`, must not be `None`")  # noqa: E501

        self._created = created

    @property
    def creator(self) -> str:
        """Gets the creator of this SafeCreationInfoResponse.


        :return: The creator of this SafeCreationInfoResponse.
        :rtype: str
        """
        return self._creator

    @creator.setter
    def creator(self, creator: str):
        """Sets the creator of this SafeCreationInfoResponse.


        :param creator: The creator of this SafeCreationInfoResponse.
        :type creator: str
        """
        if creator is None:
            raise ValueError("Invalid value for `creator`, must not be `None`")  # noqa: E501

        self._creator = creator

    @property
    def transaction_hash(self) -> str:
        """Gets the transaction_hash of this SafeCreationInfoResponse.


        :return: The transaction_hash of this SafeCreationInfoResponse.
        :rtype: str
        """
        return self._transaction_hash

    @transaction_hash.setter
    def transaction_hash(self, transaction_hash: str):
        """Sets the transaction_hash of this SafeCreationInfoResponse.


        :param transaction_hash: The transaction_hash of this SafeCreationInfoResponse.
        :type transaction_hash: str
        """
        if transaction_hash is None:
            raise ValueError("Invalid value for `transaction_hash`, must not be `None`")  # noqa: E501

        self._transaction_hash = transaction_hash

    @property
    def factory_address(self) -> str:
        """Gets the factory_address of this SafeCreationInfoResponse.


        :return: The factory_address of this SafeCreationInfoResponse.
        :rtype: str
        """
        return self._factory_address

    @factory_address.setter
    def factory_address(self, factory_address: str):
        """Sets the factory_address of this SafeCreationInfoResponse.


        :param factory_address: The factory_address of this SafeCreationInfoResponse.
        :type factory_address: str
        """
        if factory_address is None:
            raise ValueError("Invalid value for `factory_address`, must not be `None`")  # noqa: E501

        self._factory_address = factory_address

    @property
    def master_copy(self) -> str:
        """Gets the master_copy of this SafeCreationInfoResponse.


        :return: The master_copy of this SafeCreationInfoResponse.
        :rtype: str
        """
        return self._master_copy

    @master_copy.setter
    def master_copy(self, master_copy: str):
        """Sets the master_copy of this SafeCreationInfoResponse.


        :param master_copy: The master_copy of this SafeCreationInfoResponse.
        :type master_copy: str
        """
        if master_copy is None:
            raise ValueError("Invalid value for `master_copy`, must not be `None`")  # noqa: E501

        self._master_copy = master_copy

    @property
    def setup_data(self) -> str:
        """Gets the setup_data of this SafeCreationInfoResponse.


        :return: The setup_data of this SafeCreationInfoResponse.
        :rtype: str
        """
        return self._setup_data

    @setup_data.setter
    def setup_data(self, setup_data: str):
        """Sets the setup_data of this SafeCreationInfoResponse.


        :param setup_data: The setup_data of this SafeCreationInfoResponse.
        :type setup_data: str
        """
        if setup_data is None:
            raise ValueError("Invalid value for `setup_data`, must not be `None`")  # noqa: E501

        self._setup_data = setup_data

    @property
    def data_decoded(self) -> str:
        """Gets the data_decoded of this SafeCreationInfoResponse.


        :return: The data_decoded of this SafeCreationInfoResponse.
        :rtype: str
        """
        return self._data_decoded

    @data_decoded.setter
    def data_decoded(self, data_decoded: str):
        """Sets the data_decoded of this SafeCreationInfoResponse.


        :param data_decoded: The data_decoded of this SafeCreationInfoResponse.
        :type data_decoded: str
        """

        self._data_decoded = data_decoded
